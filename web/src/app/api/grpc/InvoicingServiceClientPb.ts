/**
 * @fileoverview gRPC-Web generated client stub for hestia.v1.invoicing
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.27.0
// source: invoicing.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as common_pb from './common_pb'; // proto import: "common.proto"
import * as invoicing_pb from './invoicing_pb'; // proto import: "invoicing.proto"


export class InvoicingClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorNewInvoice = new grpcWeb.MethodDescriptor(
    '/hestia.v1.invoicing.Invoicing/NewInvoice',
    grpcWeb.MethodType.UNARY,
    invoicing_pb.Invoice,
    google_protobuf_empty_pb.Empty,
    (request: invoicing_pb.Invoice) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  newInvoice(
    request: invoicing_pb.Invoice,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  newInvoice(
    request: invoicing_pb.Invoice,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  newInvoice(
    request: invoicing_pb.Invoice,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/hestia.v1.invoicing.Invoicing/NewInvoice',
        request,
        metadata || {},
        this.methodDescriptorNewInvoice,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/hestia.v1.invoicing.Invoicing/NewInvoice',
    request,
    metadata || {},
    this.methodDescriptorNewInvoice);
  }

  methodDescriptorGetInvoices = new grpcWeb.MethodDescriptor(
    '/hestia.v1.invoicing.Invoicing/GetInvoices',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    invoicing_pb.ListInvoices,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    invoicing_pb.ListInvoices.deserializeBinary
  );

  getInvoices(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<invoicing_pb.ListInvoices>;

  getInvoices(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: invoicing_pb.ListInvoices) => void): grpcWeb.ClientReadableStream<invoicing_pb.ListInvoices>;

  getInvoices(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: invoicing_pb.ListInvoices) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/hestia.v1.invoicing.Invoicing/GetInvoices',
        request,
        metadata || {},
        this.methodDescriptorGetInvoices,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/hestia.v1.invoicing.Invoicing/GetInvoices',
    request,
    metadata || {},
    this.methodDescriptorGetInvoices);
  }

  methodDescriptorGetInvoice = new grpcWeb.MethodDescriptor(
    '/hestia.v1.invoicing.Invoicing/GetInvoice',
    grpcWeb.MethodType.UNARY,
    common_pb.Id,
    invoicing_pb.Invoice,
    (request: common_pb.Id) => {
      return request.serializeBinary();
    },
    invoicing_pb.Invoice.deserializeBinary
  );

  getInvoice(
    request: common_pb.Id,
    metadata?: grpcWeb.Metadata | null): Promise<invoicing_pb.Invoice>;

  getInvoice(
    request: common_pb.Id,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: invoicing_pb.Invoice) => void): grpcWeb.ClientReadableStream<invoicing_pb.Invoice>;

  getInvoice(
    request: common_pb.Id,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: invoicing_pb.Invoice) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/hestia.v1.invoicing.Invoicing/GetInvoice',
        request,
        metadata || {},
        this.methodDescriptorGetInvoice,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/hestia.v1.invoicing.Invoicing/GetInvoice',
    request,
    metadata || {},
    this.methodDescriptorGetInvoice);
  }

}

